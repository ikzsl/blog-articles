{"version":3,"sources":["routes.js","actions/actions.js","reducers/reducers.js","components/header/Header.js","pages/signupForm/SignupForm.js","pages/loginForm/LoginForm.js","components/articles/style.js","components/articles/Articles.js","components/article/Article.js","pages/pageNotFound/pageNotFound.js","components/publicRoute/PublicRoute.js","components/app/App.js","index.js"],"names":["axios","defaults","baseURL","slug","limit","offset","changeFetchStatus","createAction","changeLoadingStatus","loginUser","logoutUser","loadArticlesList","loadCurrentArticle","userFetch","user","dispatch","url","a","post","response","data","localStorage","setItem","token","getArticlesListFetch","routes","get","userLoginFetch","setFieldError","errors","currentUser","handleActions","actions","state","action","payload","loading","articlesData","currentArticle","combineReducers","Header","useDispatch","useSelector","isLogged","id","navbar","className","to","navbarLogged","size","username","disabled","icon","LogoutOutlined","onClick","evt","preventDefault","removeItem","validationSchema","Yup","shape","max","required","password","matches","email","initialValues","Signup","onSubmit","values","userPostFetch","htmlFor","Item","name","placeholder","suffix","UserOutlined","MailOutlined","Password","autoComplete","UserAddOutlined","LoginForm","LoginOutlined","ArticlesList","styled","ul","Article","li","articles","articlesCount","articlesList","map","title","tagList","author","createdAt","favoritesCount","key","tag","formatDistance","Date","now","includeSeconds","total","onChange","page","pageSize","showSizeChanger","useParams","useEffect","article","getCurrentArticleFetch","body","updatedAt","description","favorited","PublicRoute","Component","component","rest","render","getItem","App","interceptors","request","use","config","headers","Authorization","status","loaded","exact","path","Articles","SignupForm","PageNotFound","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3a3edcfa.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://conduit.productionready.io/api/';\n\nexport default {\n  userPostUrl: () => 'users',\n  userLoginUrl: () => 'users/login',\n  getProfileUrl: () => 'user',\n  getArticleUrl: (slug) => `articles/${slug}`,\n  getArticlesListUrl: (limit = 10, offset = 0) => `articles?limit=${limit}&offset=${offset}`,\n};\n","import axios from 'axios';\nimport { createAction } from 'redux-actions';\nimport routes from '../routes';\n\nexport const changeFetchStatus = createAction('CHANGE_FETCH_STATUS');\nexport const changeLoadingStatus = createAction('CHANGE_LOADING_STATUS');\nexport const loginUser = createAction('LOGIN_USER');\nexport const logoutUser = createAction('LOGOUT_USER');\nexport const loadArticlesList = createAction('LOAD_ARTICLES_LIST');\nexport const loadCurrentArticle = createAction('LOAD_CURRENT_ARTICLE');\n\nconst userFetch = async (user, dispatch, url) => {\n  const response = await axios.post(url, { user });\n  const { data } = response;\n  localStorage.setItem('token', data.user.token);\n  dispatch(changeFetchStatus(null));\n  dispatch(loginUser(data.user));\n};\n\n// --------------------getCurrentArticleFetch--------------------\nexport const getCurrentArticleFetch = (slug) => async (dispatch) => {\n  dispatch(changeLoadingStatus(true));\n  try {\n    const url = routes.getArticleUrl(slug);\n    const response = await axios.get(url);\n    const { article } = response.data;\n    dispatch(loadCurrentArticle(article));\n    dispatch(changeLoadingStatus(false));\n  } catch (err) {\n    dispatch(changeLoadingStatus(false));\n  }\n};\n\n// --------------------getArticlesFetch--------------------\nexport const getArticlesListFetch = (limit, offset) => async (dispatch) => {\n  dispatch(changeLoadingStatus(true));\n  try {\n    const url = routes.getArticlesListUrl(limit, offset);\n    const response = await axios.get(url);\n    const { data } = response;\n    dispatch(loadArticlesList(data));\n    dispatch(changeLoadingStatus(false));\n  } catch (err) {\n    dispatch(changeLoadingStatus(false));\n  }\n};\n\n// ------------------ userPostFetch ----------------------\nexport const userPostFetch = (user, setFieldError) => async (dispatch) => {\n  dispatch(changeLoadingStatus(true));\n  try {\n    await userFetch(user, dispatch, routes.userPostUrl());\n    dispatch(changeLoadingStatus(false));\n  } catch ({ response }) {\n    const { errors } = response.data;\n    dispatch(changeFetchStatus(errors));\n    dispatch(changeLoadingStatus(false));\n    setFieldError('email', errors.email);\n    setFieldError('username', errors.username);\n    setFieldError('password', errors.password);\n  }\n};\n\n// ------------------ userLoginFetch ----------------------\nexport const userLoginFetch = (user, setFieldError) => async (dispatch) => {\n  dispatch(changeLoadingStatus(true));\n  try {\n    await userFetch(user, dispatch, routes.userLoginUrl());\n    dispatch(changeLoadingStatus(false));\n  } catch ({ response }) {\n    const { errors } = response.data;\n    dispatch(changeFetchStatus(errors));\n    dispatch(changeLoadingStatus(false));\n    // setFieldError('email', `email or password ${errors['email or password']}`);\n    setFieldError('password', `email or password ${errors['email or password']}`);\n  }\n};\n\n// --------------------getProfileFetch--------------------\nexport const getProfileFetch = () => async (dispatch) => {\n  const { token } = localStorage;\n  if (!token) {\n    return;\n  }\n  dispatch(changeLoadingStatus(true));\n  try {\n    await axios.interceptors.request.use((config) => {\n      // eslint-disable-next-line no-param-reassign\n      config.headers.Authorization = `Token ${token}`;\n      return config;\n    });\n    const url = routes.getProfileUrl();\n    const response = await axios.get(url);\n    const { data } = response;\n    dispatch(loginUser(data.user));\n    dispatch(changeLoadingStatus(false));\n  } catch (err) {\n    if (err.response.status === 401) {\n      localStorage.removeItem('token');\n    }\n    dispatch(changeLoadingStatus(false));\n  }\n};\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions/actions';\n\nconst currentUser = handleActions(\n  {\n    [actions.logoutUser]: () => {},\n    [actions.loginUser]: (state, action) => action.payload,\n  },\n  {},\n);\n\nconst errors = handleActions(\n  {\n    [actions.changeFetchStatus]: (state, action) => action.payload,\n  },\n  {},\n);\n\nconst loading = handleActions(\n  {\n    [actions.changeLoadingStatus]: (state, action) => action.payload,\n  },\n  false,\n);\n\nconst articlesData = handleActions(\n  {\n    [actions.loadArticlesList]: (state, action) => action.payload,\n  },\n  {},\n);\n\nconst currentArticle = handleActions(\n  {\n    [actions.loadCurrentArticle]: (state, action) => action.payload,\n  },\n  {},\n);\n\nexport default combineReducers({\n  currentUser,\n  errors,\n  loading,\n  articlesData,\n  currentArticle,\n});\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport { logoutUser } from '../../actions/actions';\n\nimport './header.scss';\n// import logo from '../../logo.png';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n\n  const handleExit = (evt) => {\n    evt.preventDefault();\n    localStorage.removeItem('token');\n    dispatch(logoutUser());\n  };\n\n  const isLogged = !!currentUser.id;\n\n  const navbar = (\n    <nav>\n      <ul className=\"nav\">\n        <li>\n          <NavLink to=\"/login\" className=\"link\">\n            Sign In\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/signup\" className=\"link\">\n            Sign Up\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n\n  const navbarLogged = (\n    <nav>\n      <ul className=\"nav\">\n        <li>\n          <Button size=\"large\">Create Article</Button>\n        </li>\n\n        <li className=\"link\">{currentUser.username}</li>\n        <li className=\"link\">\n          <Button disabled={false} size=\"large\" icon={<LogoutOutlined />} onClick={handleExit}>\n            Выйти\n          </Button>\n        </li>\n      </ul>\n    </nav>\n  );\n\n  return (\n    <header className=\"header\">\n      <NavLink to=\"/\" className=\"headline\">\n        Гоп-блог\n      </NavLink>\n\n      {/* <img src={logo} width=\"100\" alt=\"logo\" /> */}\n      {isLogged ? navbarLogged : navbar}\n    </header>\n  );\n};\nexport default Header;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, UserOutlined, UserAddOutlined } from '@ant-design/icons';\n\nimport { userPostFetch } from '../../actions/actions';\nimport './signupForm.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Слишком длинно - не более 50 символов')\n    .required('Имя обязательно'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\w\\W]{6,40}$/,\n      'от 6 до 40 символов, как минимум одна цифра и одна заглавная буква',\n    )\n    .required('Пароль нужен'),\n\n  email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n});\n\nconst initialValues = {\n  username: '',\n  password: '',\n  email: '',\n};\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, { setFieldError }) => {\n    dispatch(userPostFetch(values, setFieldError));\n  };\n  return (\n    <div className=\"formContainer\">\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <Form className=\"form\">\n          <h1>Регистрации</h1>\n          <div className=\"formItem\">\n            <label htmlFor=\"username\">\n              Имя\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"username\">\n              <Input\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Иван\"\n                size=\"large\"\n                suffix={<UserOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password\n                id=\"pwd\"\n                name=\"password\"\n                placeholder=\"bu7UYvjl2nkj9WNshd\"\n                size=\"large\"\n                autoComplete=\"off\"\n              />\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<UserAddOutlined />}\n              className=\"button\"\n            >\n              Зарегистрироваться\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <span>Уже зарегистрировались? </span>\n        <Link to=\"/login\">Войти</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, LoginOutlined } from '@ant-design/icons';\nimport { userLoginFetch } from '../../actions/actions';\nimport './loginForm.scss';\n\nconst initialValues = {\n  password: '',\n  email: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().required('Пароль нужен'),\n  email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = async (values, { setFieldError }) => {\n    dispatch(userLoginFetch(values, setFieldError));\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <Form>\n          <h1>Вход</h1>\n\n          <div className=\"formItem\">\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n\n          <div className=\"formItem\">\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password id=\"pwd\" name=\"password\" size=\"large\" autoComplete=\"off\" />\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<LoginOutlined />}\n              className=\"button\"\n            >\n              Войти\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <Link to=\"/signup\">Зарегистрироваться</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\n\nexport const ArticlesList = styled.ul`\n  padding: 0;\n  margin: 0 auto;\n  width: 70%;\n`;\n\nexport const Article = styled.li`\n  background-color: rgb(240, 239, 239);\n  margin: 10px;\n  padding: 10px;\n  text-decoration: none;\n  list-style: none;\n`;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Pagination } from 'antd';\nimport { formatDistance } from 'date-fns';\nimport { getArticlesListFetch } from '../../actions/actions';\n\n// import './articles.scss';\nimport { ArticlesList, Article } from './style';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { articles, articlesCount } = useSelector((state) => state.articlesData);\n\n  const handleChange = (page, pageSize) => {\n    dispatch(getArticlesListFetch(pageSize, (page - 1) * pageSize));\n  };\n\n  const articlesList = (\n    <ArticlesList className=\"articlesList\">\n      {articles\n        ? articles.map(({\n          slug, title, tagList, author, createdAt, favoritesCount,\n        }) => (\n          <Article key={slug} className=\"article\">\n            <NavLink\n              to={`/articles/${slug}`}\n                // }}\n              className=\"navLink\"\n            >\n              <h2>{title}</h2>\n              tags:\n              {' '}\n              {tagList.map((tag) => (\n                <span key={tag} className=\"tag\">\n                  {tag}\n                </span>\n              ))}\n              <br />\n              author:\n              {' '}\n              {author.username}\n              <br />\n              created:\n              {' '}\n              {formatDistance(new Date(createdAt), Date.now(), {\n                includeSeconds: true,\n              })}\n              {' '}\n              ago\n            </NavLink>\n            <br />\n            likes:\n            {' '}\n            {favoritesCount}\n          </Article>\n        ))\n        : null}\n    </ArticlesList>\n  );\n\n  return (\n    <>\n      <Pagination total={articlesCount} onChange={handleChange} showSizeChanger={false} />\n      {articlesList}\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport './article.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getCurrentArticleFetch } from '../../actions/actions';\n\nconst Article = () => {\n  const dispatch = useDispatch();\n  const { slug } = useParams();\n\n  useEffect(() => {\n    dispatch(getCurrentArticleFetch(slug));\n    // eslint-disable-next-line\n  }, []);\n\n  const {\n    title,\n    body,\n    createdAt,\n    updatedAt,\n    tagList,\n    description,\n    author,\n    favorited,\n    favoritesCount,\n  } = useSelector((state) => state.currentArticle);\n\n  return (\n    <div className=\"form-container\">\n      {title || null}\n      <br />\n      {description}\n      <br />\n      {tagList}\n      <br />\n      {body}\n      <br />\n      {createdAt}\n      <br />\n      {updatedAt}\n      <br />\n      {author ? author.username : null}\n      <br />\n      {favorited ? <p>liked</p> : <p>notLiked</p>}\n      <br />\n      {favoritesCount}\n    </div>\n  );\n};\n\nexport default Article;\n","import React from 'react';\n\nexport default () => (\n  <>\n    <h1>404</h1>\n    <h2>Страница не найдена</h2>\n  </>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={() => (localStorage.getItem('token') ? <Redirect to=\"/\" /> : <Component />)}\n  />\n);\n\nPublicRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n\nexport default PublicRoute;\n","import React, { useEffect } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'react-loader';\nimport { getProfileFetch, getArticlesListFetch } from '../../actions/actions';\nimport Header from '../header/Header';\n\nimport SignupForm from '../../pages/signupForm/SignupForm';\nimport LoginForm from '../../pages/loginForm/LoginForm';\nimport Articles from '../articles/Articles';\nimport Article from '../article/Article';\nimport PageNotFound from '../../pages/pageNotFound/pageNotFound';\n\n// import PrivateRoute from '../privateRoute/PrivateRoute';\nimport PublicRoute from '../publicRoute/PublicRoute';\n\nimport './app.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n  const loading = useSelector((state) => state.loading);\n\n  useEffect(() => {\n    dispatch(getProfileFetch());\n    // eslint-disable-next-line\n  }, [currentUser.id]);\n\n  useEffect(() => {\n    dispatch(getArticlesListFetch());\n    // eslint-disable-next-line\n  }, []);\n\n  // const isLogged = !!currentUser.id;\n\n  return (\n    <HashRouter>\n      <Header />\n      <Loader loaded={!loading} />\n      <Switch>\n        <Route exact path=\"/\" component={Articles} />\n        <Route path=\"/articles/:slug\" component={Article} />\n        <PublicRoute exact path=\"/login\" component={LoginForm} />\n        <PublicRoute exact path=\"/signup\" component={SignupForm} />\n        <Route path=\"*\" component={PageNotFound} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport reducers from './reducers/reducers';\n\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport App from './components/app/App';\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}