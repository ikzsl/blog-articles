{"version":3,"sources":["routes.js","actions/actions.js","reducers/reducers.js","components/header/Header.js","pages/signupForm/SignupForm.js","pages/loginForm/LoginForm.js","components/articles/style.js","components/articles/Articles.js","components/article/style.js","components/article/Article.js","components/addForm/style.js","components/addForm/AddForm.js","pages/pageNotFound/pageNotFound.js","components/privateRoute/PrivateRoute.js","components/publicRoute/PublicRoute.js","components/app/App.js","index.js"],"names":["axios","defaults","baseURL","limit","offset","slug","changeFetchStatus","createAction","changeLoadingStatus","loginUser","logoutUser","loadArticlesList","favoriteArticle","setCurrentPage","userFetch","user","dispatch","url","a","post","response","data","localStorage","setItem","token","articlePostFetch","article","setFieldError","routes","errors","title","description","body","setFavoriteArticle","favorited","delete","getArticlesListFetch","get","userLoginFetch","currentUser","handleActions","actions","state","payload","loading","articlesData","likedArticle","articles","find","favoritesCount","currentPage","combineReducers","Header","useDispatch","useSelector","isLogged","id","navbar","className","to","navbarLogged","size","username","disabled","icon","LogoutOutlined","onClick","evt","preventDefault","removeItem","validationSchema","Yup","shape","max","required","password","matches","email","initialValues","Signup","onSubmit","values","userPostFetch","htmlFor","Item","name","placeholder","suffix","UserOutlined","MailOutlined","Password","autoComplete","UserAddOutlined","LoginForm","LoginOutlined","ArticlesList","styled","ul","Article","li","Title","h2","TagList","div","Tag","span","Container","FavoriteButton","button","ArticleAuthor","ArticleAuthorInfo","AuthorImage","img","Username","articlesCount","useEffect","articlesList","map","tagList","author","createdAt","key","type","handleLike","HeartFilled","HeartOutlined","tag","formatDistance","Date","now","includeSeconds","src","image","alt","width","height","total","onChange","page","pageSize","showSizeChanger","defaultCurrent","current","Description","Body","useParams","currentArticle","updatedAt","slugId","ButtonContainer","AddForm","history","useHistory","handleSubmit","push","handleClickButton","document","getElementById","click","TextArea","rowKey","row","pagination","columns","render","text","record","i","TagOutlined","onPressEnter","autoFocus","DeleteOutlined","createNewRow","FileAddOutlined","PrivateRoute","Component","component","rest","getItem","PublicRoute","App","interceptors","request","use","config","headers","Authorization","status","loaded","exact","path","Articles","SignupForm","PageNotFound","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.776d2dc6.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://conduit.productionready.io/api/';\n\nexport default {\n  userPostUrl: () => 'users',\n  userLoginUrl: () => 'users/login',\n  getProfileUrl: () => 'user',\n  getArticleUrl: (slug) => `articles/${slug}`,\n  getArticlesListUrl: (limit = 10, offset = 0) => `articles?limit=${limit}&offset=${offset}`,\n  setFavoriteArticleURL: (slug) => `articles/${slug}/favorite`,\n  articlePostUrl: () => 'articles',\n};\n","import axios from 'axios';\nimport { createAction } from 'redux-actions';\nimport routes from '../routes';\n\nexport const changeFetchStatus = createAction('CHANGE_FETCH_STATUS');\nexport const changeLoadingStatus = createAction('CHANGE_LOADING_STATUS');\nexport const loginUser = createAction('LOGIN_USER');\nexport const logoutUser = createAction('LOGOUT_USER');\nexport const loadArticlesList = createAction('LOAD_ARTICLES_LIST');\nexport const loadCurrentArticle = createAction('LOAD_CURRENT_ARTICLE');\nexport const favoriteArticle = createAction('FAVORITE_ARTICLE');\nexport const setCurrentPage = createAction('SET_CURRENT_PAGE');\n\nconst userFetch = async (user, dispatch, url) => {\n  const response = await axios.post(url, { user });\n  const { data } = response;\n  localStorage.setItem('token', data.user.token);\n  dispatch(changeFetchStatus(null));\n  dispatch(loginUser(data.user));\n};\n\n// ------------------ articlePostFetch ----------------------\nexport const articlePostFetch = (article, setFieldError) => async (dispatch) => {\n  dispatch(changeLoadingStatus(true));\n  try {\n    const url = routes.articlePostUrl();\n    await axios.post(url, { article });\n    dispatch(changeLoadingStatus(false));\n  } catch ({ response }) {\n    const { errors } = response.data;\n    dispatch(changeFetchStatus(errors));\n    dispatch(changeLoadingStatus(false));\n    setFieldError('title', errors.title);\n    setFieldError('description', errors.description);\n    setFieldError('body', errors.body);\n  }\n};\n\n// --------------------setFavoriteArticle--------------------\nexport const setFavoriteArticle = (slug, favorited) => async (dispatch) => {\n  dispatch(changeLoadingStatus(true));\n  try {\n    const url = routes.setFavoriteArticleURL(slug, favorited);\n    await (favorited ? axios.delete(url) : axios.post(url));\n    dispatch(favoriteArticle({ slug, favorited }));\n    dispatch(changeLoadingStatus(false));\n  } catch (err) {\n    dispatch(changeLoadingStatus(false));\n  }\n};\n\n// --------------------getCurrentArticleFetch--------------------\n// export const getCurrentArticleFetch = (slug) => async (dispatch) => {\n//   dispatch(changeLoadingStatus(true));\n//   try {\n//     const url = routes.getArticleUrl(slug);\n//     const response = await axios.get(url);\n//     const { article } = response.data;\n//     dispatch(loadCurrentArticle(article));\n//     dispatch(changeLoadingStatus(false));\n//   } catch (err) {\n//     dispatch(changeLoadingStatus(false));\n//   }\n// };\n\n// --------------------getArticlesFetch--------------------\nexport const getArticlesListFetch = (limit, offset) => async (dispatch) => {\n  dispatch(changeLoadingStatus(true));\n  try {\n    const url = routes.getArticlesListUrl(limit, offset);\n    const response = await axios.get(url);\n    const { data } = response;\n    dispatch(loadArticlesList(data));\n    dispatch(changeLoadingStatus(false));\n  } catch (err) {\n    dispatch(changeLoadingStatus(false));\n  }\n};\n\n// ------------------ userPostFetch ----------------------\nexport const userPostFetch = (user, setFieldError) => async (dispatch) => {\n  dispatch(changeLoadingStatus(true));\n  try {\n    await userFetch(user, dispatch, routes.userPostUrl());\n    dispatch(changeLoadingStatus(false));\n  } catch ({ response }) {\n    const { errors } = response.data;\n    dispatch(changeFetchStatus(errors));\n    dispatch(changeLoadingStatus(false));\n    setFieldError('email', errors.email);\n    setFieldError('username', errors.username);\n    setFieldError('password', errors.password);\n  }\n};\n\n// ------------------ userLoginFetch ----------------------\nexport const userLoginFetch = (user, setFieldError) => async (dispatch) => {\n  dispatch(changeLoadingStatus(true));\n  try {\n    await userFetch(user, dispatch, routes.userLoginUrl());\n    dispatch(changeLoadingStatus(false));\n  } catch ({ response }) {\n    const { errors } = response.data;\n    dispatch(changeFetchStatus(errors));\n    dispatch(changeLoadingStatus(false));\n    // setFieldError('email', `email or password ${errors['email or password']}`);\n    setFieldError('password', `email or password ${errors['email or password']}`);\n  }\n};\n\n// --------------------getProfileFetch--------------------\nexport const getProfileFetch = () => async (dispatch) => {\n  const { token } = localStorage;\n  if (!token) {\n    return;\n  }\n  dispatch(changeLoadingStatus(true));\n  try {\n    await axios.interceptors.request.use((config) => {\n      // eslint-disable-next-line no-param-reassign\n      config.headers.Authorization = `Token ${token}`;\n      return config;\n    });\n    const url = routes.getProfileUrl();\n    const response = await axios.get(url);\n    const { data } = response;\n    dispatch(loginUser(data.user));\n    dispatch(changeLoadingStatus(false));\n  } catch (err) {\n    if (err.response.status === 401) {\n      localStorage.removeItem('token');\n    }\n    dispatch(changeLoadingStatus(false));\n  }\n};\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions/actions';\n\nconst currentUser = handleActions(\n  {\n    [actions.logoutUser]: () => {},\n    [actions.loginUser]: (state, { payload }) => payload,\n  },\n  {},\n);\n\nconst errors = handleActions(\n  {\n    [actions.changeFetchStatus]: (state, { payload }) => payload,\n  },\n  {},\n);\n\nconst loading = handleActions(\n  {\n    [actions.changeLoadingStatus]: (state, { payload }) => payload,\n  },\n  false,\n);\n\nconst articlesData = handleActions(\n  {\n    [actions.loadArticlesList]: (state, { payload }) => payload,\n    [actions.favoriteArticle]: (state, { payload }) => {\n      const likedArticle = state.articles.find((article) => article.slug === payload.slug);\n      // console.log(payload.slug, payload.favorited);\n      likedArticle.favorited = !payload.favorited;\n      likedArticle.favoritesCount = payload.favorited\n        ? likedArticle.favoritesCount - 1\n        : likedArticle.favoritesCount + 1;\n      return { ...state };\n    },\n  },\n  {},\n);\n\n// const currentArticle = handleActions(\n//   {\n//     [actions.loadCurrentArticle]: (state, { payload }) => payload,\n//   },\n//   {},\n// );\n\nconst currentPage = handleActions(\n  {\n    [actions.setCurrentPage]: (state, { payload }) => payload,\n  },\n  1,\n);\n\nexport default combineReducers({\n  currentUser,\n  errors,\n  loading,\n  articlesData,\n  currentPage,\n});\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport { logoutUser } from '../../actions/actions';\n\nimport './header.scss';\n// import logo from '../../logo.png';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n\n  const handleExit = (evt) => {\n    evt.preventDefault();\n    localStorage.removeItem('token');\n    dispatch(logoutUser());\n  };\n\n  const isLogged = !!currentUser.id;\n\n  const navbar = (\n    <nav>\n      <ul className=\"nav\">\n        <li>\n          <NavLink to=\"/login\" className=\"link\">\n            Sign In\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/signup\" className=\"link\">\n            Sign Up\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n\n  const navbarLogged = (\n    <nav>\n      <ul className=\"nav\">\n        <li>\n          <NavLink to=\"/add\" size=\"large\">\n            Create Article\n          </NavLink>\n        </li>\n\n        <li className=\"link\">{currentUser.username}</li>\n        <li className=\"link\">\n          <Button disabled={false} size=\"large\" icon={<LogoutOutlined />} onClick={handleExit}>\n            Выйти\n          </Button>\n        </li>\n      </ul>\n    </nav>\n  );\n\n  return (\n    <header className=\"header\">\n      <NavLink to=\"/\" className=\"headline\">\n        Гоп-блог\n      </NavLink>\n\n      {/* <img src={logo} width=\"100\" alt=\"logo\" /> */}\n      {isLogged ? navbarLogged : navbar}\n    </header>\n  );\n};\nexport default Header;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, UserOutlined, UserAddOutlined } from '@ant-design/icons';\n\nimport { userPostFetch } from '../../actions/actions';\nimport './signupForm.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Слишком длинно - не более 50 символов')\n    .required('Имя обязательно'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\w\\W]{6,40}$/,\n      'от 6 до 40 символов, как минимум одна цифра и одна заглавная буква',\n    )\n    .required('Пароль нужен'),\n\n  email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n});\n\nconst initialValues = {\n  username: '',\n  password: '',\n  email: '',\n};\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, { setFieldError }) => {\n    dispatch(userPostFetch(values, setFieldError));\n  };\n  return (\n    <div className=\"formContainer\">\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <Form className=\"form\">\n          <h1>Регистрации</h1>\n          <div className=\"formItem\">\n            <label htmlFor=\"username\">\n              Имя\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"username\">\n              <Input\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Иван\"\n                size=\"large\"\n                suffix={<UserOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password\n                id=\"pwd\"\n                name=\"password\"\n                placeholder=\"bu7UYvjl2nkj9WNshd\"\n                size=\"large\"\n                autoComplete=\"off\"\n              />\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<UserAddOutlined />}\n              className=\"button\"\n            >\n              Зарегистрироваться\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <span>Уже зарегистрировались? </span>\n        <Link to=\"/login\">Войти</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, LoginOutlined } from '@ant-design/icons';\nimport { userLoginFetch } from '../../actions/actions';\nimport './loginForm.scss';\n\nconst initialValues = {\n  password: '',\n  email: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().required('Пароль нужен'),\n  email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = async (values, { setFieldError }) => {\n    dispatch(userLoginFetch(values, setFieldError));\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <Form>\n          <h1>Вход</h1>\n\n          <div className=\"formItem\">\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n\n          <div className=\"formItem\">\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password id=\"pwd\" name=\"password\" size=\"large\" autoComplete=\"off\" />\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<LoginOutlined />}\n              className=\"button\"\n            >\n              Войти\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <Link to=\"/signup\">Зарегистрироваться</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\n\nexport const ArticlesList = styled.ul`\n  padding: 0;\n  margin: 0 auto;\n  max-width: 900px;\n`;\n\nexport const Article = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin: 20px 0;\n  padding: 20px;\n  text-decoration: none;\n  list-style: none;\n  background-color: white;\n  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  min-height: 140px;\n`;\n\nexport const Title = styled.h2`\n  margin-right: 10px;\n  display: inline-block;\n  color: #1890ff;\n  text-align: left;\n`;\n\nexport const TagList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nexport const Tag = styled.span`\n  padding: 0 10px;\n  margin-right: 10px;\n  border: 1px solid gray;\n  border-radius: 5px;\n`;\n\nexport const Container = styled.div`\n  text-align: center;\n  padding: 5px;\n`;\n\nexport const FavoriteButton = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  :focus {\n    outline: none;\n    /* outline-color: blue; */\n  }\n`;\n\nexport const ArticleAuthor = styled.div`\n  display: flex;\n`;\n\nexport const ArticleAuthorInfo = styled.div`\n  margin-right: 10px;\n  text-align: right;\n`;\n\nexport const AuthorImage = styled.img`\n  border-radius: 50%;\n`;\n\nexport const Username = styled.div`\n  font-size: 22px;\n  color: black;\n`;\n","import React, { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Pagination } from 'antd';\nimport { HeartOutlined, HeartFilled } from '@ant-design/icons';\nimport { formatDistance } from 'date-fns';\nimport { getArticlesListFetch, setFavoriteArticle, setCurrentPage } from '../../actions/actions';\n\nimport {\n  ArticlesList,\n  Article,\n  TagList,\n  Tag,\n  Container,\n  FavoriteButton,\n  Title,\n  ArticleAuthor,\n  ArticleAuthorInfo,\n  AuthorImage,\n  Username,\n} from './style';\n\nimport 'antd/dist/antd.css';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { articles, articlesCount = 1 } = useSelector((state) => state.articlesData);\n  const { id } = useSelector((state) => state.currentUser);\n  const currentPage = useSelector((state) => state.currentPage);\n  const isLogged = !!id;\n\n  const handleChange = (page, pageSize) => {\n    dispatch(getArticlesListFetch(pageSize, page * pageSize - pageSize));\n    dispatch(setCurrentPage(page));\n  };\n\n  const handleLike = (slug, favorited) => {\n    // console.log(slug, favorited);\n    dispatch(setFavoriteArticle(slug, favorited));\n  };\n\n  useEffect(() => {\n    dispatch(getArticlesListFetch(10, currentPage * 10 - 10));\n    // eslint-disable-next-line\n  }, []);\n\n  const articlesList = (\n    <ArticlesList className=\"articlesList\">\n      {articles\n        ? articles.map(({\n          slug, title, tagList, author, createdAt, favoritesCount, favorited,\n        }) => (\n          <Article key={slug} className=\"article\">\n            <div className=\"articleInfo\">\n              <NavLink to={`/articles/${slug}`}>\n                <Title>{title}</Title>\n              </NavLink>\n              {isLogged ? (\n                <FavoriteButton type=\"button\" onClick={() => handleLike(slug, favorited)}>\n                  {favorited ? <HeartFilled /> : <HeartOutlined />}\n                </FavoriteButton>\n              ) : (\n                <HeartOutlined />\n              )}\n              {' '}\n              {favoritesCount}\n              <TagList>\n                {tagList.map((tag) => (\n                  <Tag key={tag} className=\"tag\">\n                    {tag}\n                  </Tag>\n                ))}\n              </TagList>\n            </div>\n            <ArticleAuthor className=\"articleAuthor\">\n              <ArticleAuthorInfo>\n                <Username>{author.username}</Username>\n                {formatDistance(new Date(createdAt), Date.now(), {\n                  includeSeconds: true,\n                })}\n              </ArticleAuthorInfo>\n\n              <AuthorImage src={author.image} alt=\"\" width=\"46\" height=\"46\" />\n            </ArticleAuthor>\n          </Article>\n        ))\n        : null}\n    </ArticlesList>\n  );\n\n  return (\n    <>\n      {articlesList}\n      <Container>\n        <Pagination\n          total={articlesCount}\n          onChange={handleChange}\n          showSizeChanger={false}\n          defaultCurrent={1}\n          current={currentPage}\n        />\n      </Container>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0;\n  margin: 0 auto;\n  width: 80%;\n`;\n\nexport const Title = styled.div`\n  font-size: 40px;\n  color: #1890ff;\n`;\n\nexport const Description = styled.div`\n  opacity: 0.7;\n`;\n\nexport const Body = styled.div`\n  font-size: 24px;\n  color: black;\n`;\n\nexport const Tag = styled.span`\n  padding: 5px;\n  border: 1px solid green;\n`;\n\nexport const FavoriteButton = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  :focus {\n    outline: none;\n    /* outline-color: blue; */\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { HeartOutlined, HeartFilled } from '@ant-design/icons';\nimport { setFavoriteArticle } from '../../actions/actions';\nimport {\n  Container, Description, Title, Body, Tag, FavoriteButton,\n} from './style';\n\nconst Article = () => {\n  const dispatch = useDispatch();\n  const { slug } = useParams();\n\n  const { id } = useSelector((state) => state.currentUser);\n  const isLogged = !!id;\n\n  const handleLike = (slugId, favorited) => {\n    // console.log(slug, favorited);\n    dispatch(setFavoriteArticle(slugId, favorited));\n  };\n\n  const articles = useSelector((state) => state.articlesData.articles);\n  const currentArticle = articles.find((article) => article.slug === slug);\n\n  const {\n    title,\n    body,\n    createdAt,\n    updatedAt,\n    tagList,\n    description,\n    author,\n    favorited,\n    favoritesCount,\n  } = currentArticle;\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Description>{description}</Description>\n      <Tag>{tagList}</Tag>\n      <Body>{body}</Body>\n\n      <br />\n      {createdAt}\n      <br />\n      {updatedAt}\n      <br />\n      {author ? author.username : null}\n      <br />\n      {isLogged ? (\n        <FavoriteButton type=\"button\" onClick={() => handleLike(slug, favorited)}>\n          {favorited ? <HeartFilled /> : <HeartOutlined />}\n        </FavoriteButton>\n      ) : (\n        <HeartOutlined />\n      )}\n      {favoritesCount}\n    </Container>\n  );\n};\n\nexport default Article;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0;\n`;\n\nexport const ButtonContainer = styled.div`\n  margin: 10px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Input, Table, SubmitButton, AddRowButton, RemoveRowButton,\n} from 'formik-antd';\nimport { FileAddOutlined, TagOutlined, DeleteOutlined } from '@ant-design/icons';\n\nimport { articlePostFetch, setCurrentPage } from '../../actions/actions';\n\nimport { Container, ButtonContainer } from './style';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('required'),\n  description: Yup.string().required('required'),\n  body: Yup.string().required('required'),\n  tagList: Yup.array(),\n});\n\nconst initialValues = {\n  title: '',\n  description: '',\n  body: '',\n  tagList: [''],\n};\n\nconst AddForm = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = async (values, { setFieldError }) => {\n    dispatch(articlePostFetch(values, setFieldError));\n    dispatch(setCurrentPage(1));\n    history.push('/');\n  };\n\n  const handleClickButton = (evt) => {\n    evt.preventDefault();\n    document.getElementById('addTagButton').click();\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form className=\"form\">\n          <h1>Create Article</h1>\n          <div className=\"formItem\">\n            <label htmlFor=\"title\">\n              title\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"title\">\n              <Input id=\"title\" name=\"title\" placeholder=\"title\" size=\"large\" />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"description\">\n              description\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"description\">\n              <Input id=\"description\" name=\"description\" placeholder=\"description\" size=\"large\" />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"body\">\n              body\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"body\">\n              <Input.TextArea id=\"body\" name=\"body\" placeholder=\"your text\" size=\"large\" />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <Table\n              name=\"tagList\"\n              rowKey={(row) => `${row.id}`}\n              size=\"small\"\n              pagination={false}\n              columns={[\n                {\n                  title: 'Tags',\n                  key: 'tag',\n                  render: (text, record, i) => (\n                    <Container>\n                      <Input\n                        name={`tagList[${i}]`}\n                        placeholder=\"tag\"\n                        size=\"large\"\n                        suffix={<TagOutlined />}\n                        onPressEnter={handleClickButton}\n                        autoFocus\n                      />\n                      <ButtonContainer>\n                        <RemoveRowButton name=\"tagList\" icon={<DeleteOutlined />} />\n                      </ButtonContainer>\n                    </Container>\n                  ),\n                },\n              ]}\n            />\n\n            <AddRowButton\n              name=\"tagList\"\n              createNewRow={(text) => text || ''}\n              size=\"large\"\n              type=\"primary\"\n              className=\"skillsButton\"\n              id=\"addTagButton\"\n            >\n              add tag\n            </AddRowButton>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<FileAddOutlined />}\n              className=\"button\"\n            >\n              Add article\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <span>Уже зарегистрировались? </span>\n        <Link to=\"/login\">Войти</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default AddForm;\n","import React from 'react';\n\nexport default () => (\n  <>\n    <h1>404</h1>\n    <h2>Страница не найдена</h2>\n  </>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={() => (localStorage.getItem('token') ? <Component /> : <Redirect to=\"/login\" />)}\n  />\n);\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={() => (localStorage.getItem('token') ? <Redirect to=\"/\" /> : <Component />)}\n  />\n);\n\nPublicRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n\nexport default PublicRoute;\n","import React, { useEffect } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'react-loader';\nimport { getProfileFetch, getArticlesListFetch } from '../../actions/actions';\nimport Header from '../header/Header';\n\nimport SignupForm from '../../pages/signupForm/SignupForm';\nimport LoginForm from '../../pages/loginForm/LoginForm';\nimport Articles from '../articles/Articles';\nimport Article from '../article/Article';\nimport AddForm from '../addForm/AddForm';\nimport PageNotFound from '../../pages/pageNotFound/pageNotFound';\n\nimport PrivateRoute from '../privateRoute/PrivateRoute';\nimport PublicRoute from '../publicRoute/PublicRoute';\n\nimport './app.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n  const loading = useSelector((state) => state.loading);\n\n  useEffect(() => {\n    dispatch(getProfileFetch());\n    // eslint-disable-next-line\n  }, [currentUser.id]);\n\n  useEffect(() => {\n    dispatch(getArticlesListFetch());\n    // eslint-disable-next-line\n  }, []);\n\n  // const isLogged = !!currentUser.id;\n\n  return (\n    <HashRouter>\n      <Header />\n      <Loader loaded={!loading} className=\"loader\" />\n      <Switch>\n        <Route exact path=\"/\" component={Articles} />\n        <Route exact path=\"/articles/:slug\" component={Article} />\n        <PrivateRoute exact path=\"/articles/:slug/edit\" component={() => <h1>edit</h1>} />\n        <PrivateRoute exact path=\"/add\" component={AddForm} />\n        <PublicRoute exact path=\"/login\" component={LoginForm} />\n        <PublicRoute exact path=\"/signup\" component={SignupForm} />\n        <Route path=\"*\" component={PageNotFound} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// import { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport reducers from './reducers/reducers';\n\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport App from './components/app/App';\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}